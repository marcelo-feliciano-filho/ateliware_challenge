Instruções para subir o ambiente conforme apresentado pela AWS no Windows 10:

https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create-deploy-python-django.html

1. Abrir o terminal de comandos python (anaconda navigator ou similar como cmd, etc...)
2. Instalar pip3 install virtualenv awsebcli
3. Mudar para algum diretório próximo ao projeto (cd C:/diretorio/)
4. Criar um ambiente virtual: virtualenv eb-virt
5. Ativar o ambiente virtual: eb-virt\scripts\activate
6. Instalar nesse ambiente virtual as bibliotecas necessárias, nesse caso são:
	pip install django selenium PyGithub psycopg2
7. Entrar no diretório do projeto (cd Ateliware_Dev_Test\Ateliware_djangoProject)
8. Criar um arquivo com os requisitos do projeto para uso na AWS: pip freeze > requirements.txt
9. Criar diretório para armazenar as extensões: mkdir .ebextensions
10. Criar arquivo de configuração do django .ebextensions/django.config contendo:
	option_settings:
    	    aws:elasticbeanstalk:container:python:
                WSGIPath: django_project/wsgi.py
11. Coletar arquivos estáticos do gerenciador do projeto django: python manage.py collectstatic (Digite 'yes')
12. Desativar o ambiente virtual gerado: deactivate
13. Iniciar o projeto por meio do ambiente gerado: eb init -p python-3.7 ateliware-dev-test-mff-aws
14. Fornecer chave de acesso da Amazon Web Services;

Com isso, o projeto estará na AWS, agora para iniciar a aplicação, deve-se:

1. Iniciar pelo terminal anaconda o 'Elastic Beanstalk': eb init
2. Seguir conforme log:
Cannot setup CodeCommit because there is no Source Control setup, continuing with initialization
Do you want to set up SSH for your instances?
(Y/n): Y

Type a keypair name.
(Default is aws-eb):
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in C:\Users\marce\.ssh\aws-eb.
Your public key has been saved in C:\Users\marce\.ssh\aws-eb.pub.
The key fingerprint is:
SHA256:ZWfvf7nj1P4/htwaiMTZT+IsGbzgUO3SA4+uBFD8Bq4 aws-eb
The key's randomart image is:
+---[RSA 3072]----+
|  ..             |
|  .o    .        |
| .. o  o .o o    |
|  .. o. Oooo .   |
|  .... +S@ o ..  |
| E  . + + O =.  .|
|     . o = +.o+.o|
|    . .   .  ooO.|
|     .       .+o%|
+----[SHA256]-----+
WARNING: Uploaded SSH public key for "aws-eb" into EC2 for region us-west-2.

3. Criar o ambiente virtual no domínio da Amazon: eb create django-env (Leva em torno de 3 minutos e 30 segundos)
4. Avaliar o status da criação do ambiente: eb status
5. Acrescentar o valor da chave CNAME à variável lista ALLOWED_HOSTS em settings.py
6. Realizar deploy da aplicação: eb deploy
7. Abrir console da AWS: eb console
8. Configurar o banco de dados em: django-env -> configurations -> database
9. Com o banco configurado, é possível criar o arquivo db-migrate.py contendo:
container_commands:
  01_migrate:
    command: "django-admin.py migrate"
    leader_only: true
  02_createsuperuser:
    command: "echo \"from django.contrib.auth.models import User; User.objects.create_superuser('Marcelo_admin', 'marcelo.feliciano.f@outlook.com', 'ateliware_hire_me!')\" | python manage.py shell" 
    leader_only: true
option_settings:
  aws:elasticbeanstalk:application:environment:
    DJANGO_SETTINGS_MODULE: ateliware_git_app.settings

10. 

 